geomesa {
  sfts {
    "example-csv" = {
      attributes = [
        { name = "name",     type = "String"                 }
        { name = "age",      type = "Integer", index = false }
        { name = "lastseen", type = "Date"                   }
        { name = "geom",     type = "Point",   srid = 4326, default = true }
      ]
    }
    "example-xml" = {
      attributes = [
        { name = "number", type = "Integer" }
        { name = "color",  type = "String"  }
        { name = "weight", type = "Double"  }
        { name = "source", type = "String"  }
        { name = "geom",   type = "Point", index = true, srid = 4326, default = true }
      ]
    }
    "example-json" = {
      attributes = [
        { name = "number", type = "Integer" }
        { name = "color",  type = "String"  }
        { name = "weight", type = "Double"  }
        { name = "geom",   type = "Point"   }
      ]
    }
    "example-avro" = {
      attributes = [
        { name = "dtg",  type = "Date",  default = true }
        { name = "geom", type = "Point", index = "true", srid = 4326, default = true }
      ]
    }
  }
  converters {
    "example-csv" = {
      type   = "delimited-text"
      format = "CSV"
      options {
        skip-lines = 1
      }
      id-field = "toString($fid)",
      fields = [
        { name = "fid",       transform = "$1::int"                     }
        { name = "name",     transform = "$2::string"                  }
        { name = "age",      transform = "$3::int"                     }
        { name = "lastseen", transform = "date('yyyy-MM-dd', $4)"      }
        { name = "lon",      transform = "$7::double"                  }
        { name = "lat",      transform = "$8::double"                  }
        { name = "geom",     transform = "point($lon, $lat)"           }
      ]
    }
    "example-xml" = {
      type          = "xml"
      id-field      = "uuid()"
      feature-path  = "Feature"
      xpath-factory = "net.sf.saxon.xpath.XPathFactoryImpl"
      fields = [
        { name = "number", path = "number",           transform = "$0::integer"       }
        { name = "color",  path = "color",            transform = "trim($0)"          }
        { name = "weight", path = "physical/@weight", transform = "$0::double"        }
        { name = "source", path = "/doc/DataSource/name/text()"                       }
        { name = "lat",    path = "geom/lat",         transform = "$0::double"        }
        { name = "lon",    path = "geom/lon",         transform = "$0::double"        }
        { name = "geom",                              transform = "point($lon, $lat)" }
      ]
    }
    "example-xml-multi" = {
      type          = "xml"
      id-field      = "uuid()"
      feature-path  = "Feature"
      xpath-factory = "net.sf.saxon.xpath.XPathFactoryImpl"
      options {
        line-mode  = "multi"
      }
      fields = [
        { name = "number", path = "number",           transform = "$0::integer"       }
        { name = "color",  path = "color",            transform = "trim($0)"          }
        { name = "weight", path = "physical/@weight", transform = "$0::double"        }
        { name = "source", path = "/doc/DataSource/name/text()"                       }
        { name = "lat",    path = "geom/lat",         transform = "$0::double"        }
        { name = "lon",    path = "geom/lon",         transform = "$0::double"        }
        {name = "geom",                               transform = "point($lon, $lat)" }
      ]
    }
    "example-json" = {
      type     = "json"
      id-field = "$fid"
      fields = [
        { name = "fid",    json-type = "integer", path = "$.id",     transform = "toString($0)"      }
        { name = "number", json-type = "integer", path = "$.number",                                 }
        { name = "color",  json-type = "string",  path = "$.color",  transform = "trim($0)"          }
        { name = "weight", json-type = "double",  path = "$.physical.weight",                        }
        { name = "lat",    json-type = "double",  path = "$.lat",                                    }
        { name = "lon",    json-type = "double",  path = "$.lon",                                    }
        { name = "geom",                                             transform = "point($lon, $lat)" }
      ]
    }
    "example-avro-no-header" = {
      type   = "avro"
      schema = """{"type":"record","name":"CompositeMessage","namespace":"org.locationtech","fields":[{"name":"content","type":[{"type":"record","name":"TObj","fields":[{"name":"kvmap","type":{"type":"array","items":{"type":"record","name":"kvpair","fields":[{"name":"k","type":"string"},{"name":"v","type":["string","double","int","null"]}]}}}]},{"type":"record","name":"OtherObject","fields":[{"name":"fid","type":"int"}]}]}]}"""
      options {
        header = false
      }
      id-field = "uuid()"
      fields = [
        { name = "tobj", transform = "avroPath($1, '/content$type=TObj')"                      }
        { name = "dtg",  transform = "date('yyyy-MM-dd', avroPath($tobj, '/kvmap[$k=dtg]/v'))" }
        { name = "lat",  transform = "avroPath($tobj, '/kvmap[$k=lat]/v')"                     }
        { name = "lon",  transform = "avroPath($tobj, '/kvmap[$k=lon]/v')"                     }
        { name = "geom", transform = "point($lon, $lat)"                                       }
      ]
    }
  }
}
